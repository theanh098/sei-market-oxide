//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "mint_group")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub collection_address: String,
    pub name: String,
    pub whitelist: Option<Vec<String>>,
    pub max_tokens: i32,
    #[sea_orm(column_type = "Decimal(Some((90, 2)))")]
    pub mint_price: Decimal,
    pub creators: String,
    pub start_time: Option<DateTimeWithTimeZone>,
    pub end_time: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::launchpad_collection::Entity",
        from = "Column::CollectionAddress",
        to = "super::launchpad_collection::Column::CollectionAddress",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    LaunchpadCollection,
}

impl Related<super::launchpad_collection::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LaunchpadCollection.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
