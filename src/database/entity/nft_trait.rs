//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "nft_trait")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub attribute: String,
    pub value: String,
    pub display_type: Option<String>,
    pub nft_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::nft::Entity",
        from = "Column::NftId",
        to = "super::nft::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Nft,
}

impl Related<super::nft::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Nft.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
